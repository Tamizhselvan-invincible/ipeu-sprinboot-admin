name: CI/CD Pipeline

on:
  push:
    branches: ["production-ec2"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Sources
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Environment Variables
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "AES_ENCRYPTION_KEY=${{ secrets.AES_ENCRYPTION_KEY }}" >> .env
          echo "JWT_ACCESS_TOKEN_EXPIRATION=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}" >> .env
          echo "JWT_REFRESH_TOKEN_EXPIRATION=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION }}" >> .env
          echo "PAY_SPRINT_BASE_URL=${{ secrets.PAY_SPRINT_BASE_URL }}" >> .env
          echo "PAY_SPRINT_JWT_KEY=${{ secrets.PAY_SPRINT_JWT_KEY }}" >> .env
          echo "PAY_SPRINT_AUTHORIZED_KEY=${{ secrets.PAY_SPRINT_AUTHORIZED_KEY }}" >> .env
          echo "PAY_SPRINT_PARTNER_ID=${{ secrets.PAY_SPRINT_PARTNER_ID }}" >> .env
          echo "SCRIZA_BASE_URL=${{ secrets.SCRIZA_BASE_URL }}" >> .env
          echo "SCRIZA_API_TOKEN=${{ secrets.SCRIZA_API_TOKEN }}" >> .env

      - name: Create Firebase Configuration File
        run: echo "${{ secrets.FIREBASE_CONFIG_FILE }}" | base64 --decode > ipeyu-firebase-admin-sdk.json

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build the Spring Boot application
        run: mvn clean package -DskipTests

      - name: Build and Tag Docker Image
        run: |
          docker build -t heterophyllustechnologyllp/ipeyu-backend-admin:latest .
          docker tag heterophyllustechnologyllp/ipeyu-backend-admin:latest heterophyllustechnologyllp/ipeyu-backend-admin:latest

      - name: Push Docker Image
        run: docker push heterophyllustechnologyllp/ipeyu-backend-admin:latest

  deploy:
    needs: build-and-deploy
    runs-on: self-hosted

    steps:
      - name: Pull Latest Docker Image
        run: docker pull heterophyllustechnologyllp/ipeyu-backend-admin:latest

      - name: Stop Running Container
        run: docker compose down

      - name: Remove Old Container
        run: docker rm -f iPeyU-backend || true

      - name: Start New Container
        run: docker compose up -d
